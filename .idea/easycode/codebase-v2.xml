<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/delivery-service/src/main/java/org/example/controller/PingController.java;C:/Users/artem/IdeaProjects/ecommerce-system/delivery-service/src/main/java/org/example/DeliveryServiceApplication.java;C:/Users/artem/IdeaProjects/ecommerce-system/inventory-service/src/main/java/org/example/config/KafkaConsumerConfig.java;C:/Users/artem/IdeaProjects/ecommerce-system/inventory-service/src/main/java/org/example/config/KafkaProducerConfig.java;C:/Users/artem/IdeaProjects/ecommerce-system/inventory-service/src/main/java/org/example/controller/InventoryController.java;C:/Users/artem/IdeaProjects/ecommerce-system/inventory-service/src/main/java/org/example/event/InventoryNotAvailableEvent.java;C:/Users/artem/IdeaProjects/ecommerce-system/inventory-service/src/main/java/org/example/event/InventoryReservedEvent.java;C:/Users/artem/IdeaProjects/ecommerce-system/inventory-service/src/main/java/org/example/event/OrderCreatedEvent.java;C:/Users/artem/IdeaProjects/ecommerce-system/inventory-service/src/main/java/org/example/kafka/InventoryEventProducer.java;C:/Users/artem/IdeaProjects/ecommerce-system/inventory-service/src/main/java/org/example/kafka/OrderEventListener.java;C:/Users/artem/IdeaProjects/ecommerce-system/inventory-service/src/main/java/org/example/InventoryServiceApplication.java;C:/Users/artem/IdeaProjects/ecommerce-system/notification-service/src/main/java/org/example/controller/PingController.java;C:/Users/artem/IdeaProjects/ecommerce-system/notification-service/src/main/java/org/example/NotificationServiceApplication.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/controller/OrderController.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/dto/CreateOrderRequest.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/dto/OrderResponse.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/exception/GlobalExceptionHandler.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/exception/OutOfStockException.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/exception/PaymentFailedException.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/messaging/config/KafkaProducerConfig.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/messaging/event/OrderCreatedEvent.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/messaging/producer/OrderEventProducer.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/model/Order.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/model/OrderStatus.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/service/OrderService.java;C:/Users/artem/IdeaProjects/ecommerce-system/order-service/src/main/java/org/example/OrderServiceApplication.java;C:/Users/artem/IdeaProjects/ecommerce-system/payment-service/src/main/java/org/example/config/KafkaConsumerConfig.java;C:/Users/artem/IdeaProjects/ecommerce-system/payment-service/src/main/java/org/example/controller/PaymentController.java;C:/Users/artem/IdeaProjects/ecommerce-system/payment-service/src/main/java/org/example/event/InventoryNotAvailableEvent.java;C:/Users/artem/IdeaProjects/ecommerce-system/payment-service/src/main/java/org/example/event/InventoryReservedEvent.java;C:/Users/artem/IdeaProjects/ecommerce-system/payment-service/src/main/java/org/example/kafka/InventoryEventListener.java;C:/Users/artem/IdeaProjects/ecommerce-system/payment-service/src/main/java/org/example/PaymentServiceApplication.java;C:/Users/artem/IdeaProjects/ecommerce-system/product-service/src/main/java/org/example/controller/ProductController.java;C:/Users/artem/IdeaProjects/ecommerce-system/product-service/src/main/java/org/example/ProductServiceApplication.java;C:/Users/artem/IdeaProjects/ecommerce-system/product-service/src/test/java/org/example/AppTest.java" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/artem/IdeaProjects/ecommerce-system&quot;:&quot;{\&quot;/product-service/src/main/java/org/example/ProductServiceApplication.java\&quot;:\&quot;This file is a Spring Boot application that serves as the entry point for the Product Service. It does not contain any classes or functions, but rather sets up the Spring Boot application and starts the application.\\n\\nThe file does the following:\\n\\n1. Imports the necessary Spring Boot classes.\\n2. Defines the `ProductServiceApplication` class and marks it as a Spring Boot application using the `@SpringBootApplication` annotation.\\n3. Provides the `main()` method, which is the entry point for the application and calls the `SpringApplication.run()` method to start the application.\&quot;,\&quot;/inventory-service/src/main/java/org/example/config/KafkaProducerConfig.java\&quot;:\&quot;This file is a Spring configuration class for Kafka producer configuration. It sets up the necessary configurations and beans for producing `InventoryReservedEvent` and `InventoryNotAvailableEvent` messages to Kafka.\\n\\n`KafkaProducerConfig`: This class configures the Kafka producer settings and creates the necessary beans for producing events to Kafka.\\n\\n`producerConfigs()`: This function creates a map of Kafka producer configurations, including the bootstrap servers, key serializer, and value serializer.\\n\\n`reservedEventProducerFactory()`: This function creates a Kafka producer factory for `InventoryReservedEvent` messages.\\n\\n`reservedEventKafkaTemplate()`: This function creates a Kafka template for sending `InventoryReservedEvent` messages.\\n\\n`notAvailableProducerFactory()`: This function creates a Kafka producer factory for `InventoryNotAvailableEvent` messages.\\n\\n`notAvailableKafkaTemplate()`: This function creates a Kafka template for sending `InventoryNotAvailableEvent` messages.\&quot;,\&quot;/order-service/src/main/java/org/example/exception/PaymentFailedException.java\&quot;:\&quot;This file defines a custom exception class `PaymentFailedException` that extends the `RuntimeException` class.\\n\\n`PaymentFailedException`: A custom exception class that represents a failed payment for a specific order.\\n\\n`PaymentFailedException(String orderId)`: A constructor that creates a `PaymentFailedException` instance with a message indicating the order ID for which the payment failed.\&quot;,\&quot;/inventory-service/src/main/java/org/example/event/InventoryReservedEvent.java\&quot;:\&quot;This file defines a single class, `InventoryReservedEvent`, which represents an event that occurs when inventory for a product is reserved for a specific order.\\n\\n`InventoryReservedEvent`: A class that represents an event where inventory for a product is reserved for a specific order.\\n\\n`InventoryReservedEvent()`: The default constructor for the `InventoryReservedEvent` class.\\n\\n`InventoryReservedEvent(String orderId, String productId, int quantity)`: A constructor that initializes the `orderId`, `productId`, and `quantity` fields of the `InventoryReservedEvent` class.\\n\\n`getOrderId()`: A getter method that returns the `orderId` field of the `InventoryReservedEvent` class.\\n\\n`setOrderId(String orderId)`: A setter method that sets the `orderId` field of the `InventoryReservedEvent` class.\\n\\n`getProductId()`: A getter method that returns the `productId` field of the `InventoryReservedEvent` class.\\n\\n`setProductId(String productId)`: A setter method that sets the `productId` field of the `InventoryReservedEvent` class.\\n\\n`getQuantity()`: A getter method that returns the `quantity` field of the `InventoryReservedEvent` class.\\n\\n`setQuantity(int quantity)`: A setter method that sets the `quantity` field of the `InventoryReservedEvent` class.\&quot;,\&quot;/payment-service/src/main/java/org/example/event/InventoryNotAvailableEvent.java\&quot;:\&quot;This file defines a single class, `InventoryNotAvailableEvent`, which represents an event that occurs when the inventory for a specific product is not available for a given order.\\n\\n`InventoryNotAvailableEvent`: A class that represents an event where the inventory for a specific product is not available for a given order.\\n\\n`InventoryNotAvailableEvent()`: The default constructor for the `InventoryNotAvailableEvent` class.\\n\\n`InventoryNotAvailableEvent(String orderId, String productId)`: A constructor that initializes the `orderId` and `productId` fields of the `InventoryNotAvailableEvent` class.\\n\\n`getOrderId()`: A getter method that returns the `orderId` field of the `InventoryNotAvailableEvent` class.\\n\\n`setOrderId(String orderId)`: A setter method that sets the `orderId` field of the `InventoryNotAvailableEvent` class.\\n\\n`getProductId()`: A getter method that returns the `productId` field of the `InventoryNotAvailableEvent` class.\\n\\n`setProductId(String productId)`: A setter method that sets the `productId` field of the `InventoryNotAvailableEvent` class.\&quot;,\&quot;/notification-service/src/main/java/org/example/NotificationServiceApplication.java\&quot;:\&quot;This file is the main class for a Spring Boot application called \\\&quot;NotificationServiceApplication\\\&quot;. It does not contain any other classes or functions. The file serves as the entry point for the application, and when executed, it will start the Spring Boot application.\\n\\n`NotificationServiceApplication`: This is the main class for the Spring Boot application, which is annotated with `@SpringBootApplication` to enable auto-configuration and component scanning.\\n\\n`main`: This is the main method that is executed when the application is started. It calls the `run` method of the `SpringApplication` class, which starts the Spring Boot application.\&quot;,\&quot;/inventory-service/src/main/java/org/example/event/OrderCreatedEvent.java\&quot;:\&quot;This file defines a single class, `OrderCreatedEvent`, which represents an event related to the creation of an order.\\n\\n`OrderCreatedEvent`: A class that represents an event related to the creation of an order, containing information such as the order ID, product ID, quantity, customer ID, and order amount.\\n\\n`OrderCreatedEvent()`: The default constructor for the `OrderCreatedEvent` class.\\n\\n`OrderCreatedEvent(String orderId, String productId, int quantity, String customerId, double amount)`: The parameterized constructor for the `OrderCreatedEvent` class, which initializes the event with the provided order details.\\n\\n`getOrderId()`: Returns the order ID associated with the event.\\n\\n`setOrderId(String orderId)`: Sets the order ID associated with the event.\\n\\n`getProductId()`: Returns the product ID associated with the event.\\n\\n`setProductId(String productId)`: Sets the product ID associated with the event.\\n\\n`getQuantity()`: Returns the quantity associated with the event.\\n\\n`setQuantity(int quantity)`: Sets the quantity associated with the event.\\n\\n`getCustomerId()`: Returns the customer ID associated with the event.\\n\\n`setCustomerId(String customerId)`: Sets the customer ID associated with the event.\\n\\n`getAmount()`: Returns the order amount associated with the event.\\n\\n`setAmount(double amount)`: Sets the order amount associated with the event.\&quot;,\&quot;/payment-service/src/main/java/org/example/PaymentServiceApplication.java\&quot;:\&quot;This file is a Spring Boot application that serves as the entry point for the Payment Service application. It does not contain any classes or functions, but rather sets up the Spring Boot application and starts the application.\\n\\nThe file does the following:\\n\\n1. Imports the necessary Spring Boot classes and annotations.\\n2. Defines the `PaymentServiceApplication` class, which is annotated with `@SpringBootApplication`, indicating that it is a Spring Boot application.\\n3. Provides the `main()` method, which is the entry point for the application and calls the `SpringApplication.run()` method to start the application.\&quot;,\&quot;/inventory-service/src/main/java/org/example/InventoryServiceApplication.java\&quot;:\&quot;This file is the main entry point for a Spring Boot application called \\\&quot;InventoryServiceApplication\\\&quot;. It does not contain any classes or functions, but rather serves as the starting point for the application.\\n\\nThe file performs the following tasks:\\n\\n1. Imports the necessary Spring Boot classes and annotations.\\n2. Defines the `InventoryServiceApplication` class, which is annotated with `@SpringBootApplication`, indicating that it is a Spring Boot application.\\n3. Provides the `main()` method, which is the entry point for the application and calls the `SpringApplication.run()` method to start the application.\&quot;,\&quot;/order-service/src/main/java/org/example/exception/GlobalExceptionHandler.java\&quot;:\&quot;This file is a Spring Boot application that handles global exceptions using a `GlobalExceptionHandler` class.\\n\\n`GlobalExceptionHandler`: A class that provides a centralized exception handling mechanism for the application.\\n\\n`handleOutOfStock`: A function that handles the `OutOfStockException` and returns a `ResponseEntity` with a `BAD_REQUEST` status and an error message.\\n\\n`handlePaymentFailed`: A function that handles the `PaymentFailedException` and returns a `ResponseEntity` with a `BAD_REQUEST` status and an error message.\&quot;,\&quot;/inventory-service/src/main/java/org/example/kafka/InventoryEventProducer.java\&quot;:\&quot;This file contains a single class, `InventoryEventProducer`, which is responsible for producing and sending inventory-related events to a Kafka topic.\\n\\n`InventoryEventProducer`: A service class that publishes `InventoryReservedEvent` and `InventoryNotAvailableEvent` to a Kafka topic named \\\&quot;inventory-events\\\&quot;.\\n\\n`sendReservedEvent`: Sends an `InventoryReservedEvent` to the \\\&quot;inventory-events\\\&quot; Kafka topic.\\n\\n`sendNotAvailableEvent`: Sends an `InventoryNotAvailableEvent` to the \\\&quot;inventory-events\\\&quot; Kafka topic.\&quot;,\&quot;/delivery-service/src/main/java/org/example/controller/PingController.java\&quot;:\&quot;This file contains a single class and a single function, which are summarized as follows:\\n\\n`PingController`: A REST controller class that provides a simple health check endpoint for a delivery service.\\n\\n`ping()`: A GET mapping that returns a string indicating that the delivery service is up and running.\&quot;,\&quot;/order-service/src/main/java/org/example/exception/OutOfStockException.java\&quot;:\&quot;This file defines a custom exception class called `OutOfStockException` that extends the `RuntimeException` class.\\n\\n`OutOfStockException`: A custom exception class that represents a situation where a product is out of stock.\\n\\n`OutOfStockException(String productId)`: A constructor that creates an `OutOfStockException` instance with a message indicating that the specified product is out of stock.\&quot;,\&quot;/payment-service/src/main/java/org/example/kafka/InventoryEventListener.java\&quot;:\&quot;This file contains a single class `InventoryEventListener` that listens for Kafka events related to inventory management and handles them accordingly.\\n\\n`InventoryEventListener`: A Spring component that listens for Kafka events related to inventory management and processes them.\\n\\n`handleNotAvailable`: A method that handles the `InventoryNotAvailableEvent` by printing a message and potentially sending a `PaymentFailedEvent`.\\n\\n`handleInventoryReserved`: A method that handles the `InventoryReservedEvent` by retrieving the product price, calculating the total amount, and emulating a payment process, potentially sending a `PaymentSuccessEvent` or `PaymentFailedEvent`.\&quot;,\&quot;/order-service/src/main/java/org/example/messaging/event/OrderCreatedEvent.java\&quot;:\&quot;This file defines an `OrderCreatedEvent` class, which represents an event that occurs when an order is created. The class contains information about the order, such as the order ID, product ID, quantity, customer ID, and amount.\\n\\n`OrderCreatedEvent`: A class that represents an event when an order is created, containing information about the order.\\n\\n`getOrderId()`: Returns the order ID of the order.\\n`setOrderId(String orderId)`: Sets the order ID of the order.\\n`getProductId()`: Returns the product ID of the order.\\n`setProductId(String productId)`: Sets the product ID of the order.\\n`getQuantity()`: Returns the quantity of the order.\\n`setQuantity(int quantity)`: Sets the quantity of the order.\\n`getCustomerId()`: Returns the customer ID of the order.\\n`setCustomerId(String customerId)`: Sets the customer ID of the order.\\n`getAmount()`: Returns the amount of the order.\\n`setAmount(double amount)`: Sets the amount of the order.\&quot;,\&quot;/inventory-service/src/main/java/org/example/controller/InventoryController.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`InventoryController`: A REST controller class that handles inventory-related operations.\\n\\n`isInStock`: A function that checks if a given product is in stock based on the provided quantity.\\n\\nThe file implements a simple inventory management system, where the `isInStock` function emulates the availability of a product by checking if the requested quantity is less than or equal to 5. This functionality can be used as part of a larger web application to handle inventory-related operations.\&quot;,\&quot;/order-service/src/main/java/org/example/model/Order.java\&quot;:\&quot;`Order`: A class that represents an order, containing information such as the order ID, product ID, quantity, customer ID, amount, and order status.\\n\\n`getOrderId()`: Returns the order ID.\\n`getProductId()`: Returns the product ID.\\n`getQuantity()`: Returns the quantity of the order.\\n`getAmount()`: Returns the amount of the order.\\n`getCustomerId()`: Returns the customer ID.\\n`getStatus()`: Returns the status of the order.\\n`setStatus()`: Sets the status of the order.\\n`toString()`: Returns a string representation of the order.\\n\\nThis file defines the `Order` class, which is a model class that represents an order. The class has various properties and methods to access and manipulate the order information.\&quot;,\&quot;/order-service/src/main/java/org/example/messaging/config/KafkaProducerConfig.java\&quot;:\&quot;This file is a Spring configuration class for a Kafka producer. It sets up the necessary configuration for the Kafka producer, including the bootstrap server address, key serializer, and value serializer.\\n\\n`KafkaProducerConfig`: This class configures the Kafka producer factory and the Kafka template.\\n\\n`producerFactory()`: This method creates a `ProducerFactory` instance with the necessary configuration for the Kafka producer.\\n\\n`kafkaTemplate()`: This method creates a `KafkaTemplate` instance using the `producerFactory()` method.\&quot;,\&quot;/inventory-service/src/main/java/org/example/config/KafkaConsumerConfig.java\&quot;:\&quot;This file is a Spring configuration class for a Kafka consumer. It sets up the necessary configurations for the consumer, including the consumer factory and the listener container factory.\\n\\n`KafkaConsumerConfig`: This class configures the Kafka consumer for the application.\\n\\n`consumerFactory()`: This method creates a `ConsumerFactory` instance that is used to create Kafka consumer instances.\\n\\n`kafkaListenerContainerFactory()`: This method creates a `ConcurrentKafkaListenerContainerFactory` instance that is used to create Kafka listener containers.\&quot;,\&quot;/product-service/src/main/java/org/example/controller/ProductController.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`ProductController`: A REST controller class that provides an endpoint to retrieve the price of a product based on its ID.\\n\\n`getPrice`: A function that retrieves the price of a product from a static price list, using the provided product ID as the key.\\n\\nThe file defines a simple REST API that allows clients to fetch the price of a product by providing the product ID. The prices are stored in a static `priceList` map, and the `getPrice` function looks up the price for the given product ID and returns it.\&quot;,\&quot;/delivery-service/src/main/java/org/example/DeliveryServiceApplication.java\&quot;:\&quot;This file is the main entry point for a Spring Boot application called \\\&quot;DeliveryServiceApplication\\\&quot;. It does not contain any classes or functions, but rather sets up the Spring Boot application and starts the application.\\n\\nThe file does the following:\\n\\n1. Imports the necessary Spring Boot classes.\\n2. Defines the `DeliveryServiceApplication` class and marks it as a Spring Boot application using the `@SpringBootApplication` annotation.\\n3. Provides the `main()` method, which is the entry point for the application and calls the `SpringApplication.run()` method to start the application.\&quot;,\&quot;/order-service/src/main/java/org/example/dto/CreateOrderRequest.java\&quot;:\&quot;This file contains a single class, `CreateOrderRequest`, which is a data transfer object (DTO) used to represent the necessary information for creating a new order.\\n\\n`CreateOrderRequest`: A DTO class that holds the product ID, quantity, and customer ID for a new order.\\n\\n`getProductId()`: Returns the product ID for the order.\\n`setProductId(String productId)`: Sets the product ID for the order.\\n`getQuantity()`: Returns the quantity of the product being ordered.\\n`setQuantity(int quantity)`: Sets the quantity of the product being ordered.\\n`getCustomerId()`: Returns the customer ID for the order.\\n`setCustomerId(String customerId)`: Sets the customer ID for the order.\&quot;,\&quot;/order-service/src/main/java/org/example/OrderServiceApplication.java\&quot;:\&quot;This file is a Spring Boot application that serves as the entry point for the Order Service. It does not contain any classes or functions, but rather sets up the Spring Boot application and starts the application.\\n\\nThe file does the following:\\n\\n1. Imports the necessary Spring Boot classes.\\n2. Defines the `OrderServiceApplication` class and marks it as a Spring Boot application using the `@SpringBootApplication` annotation.\\n3. Provides the `main()` method, which is the entry point for the application and calls the `SpringApplication.run()` method to start the application.\&quot;,\&quot;/order-service/src/main/java/org/example/service/OrderService.java\&quot;:\&quot;This file contains the `OrderService` class and several functions within it.\\n\\n`OrderService`: A service class that handles the creation and retrieval of orders.\\n\\n`createOrder`: Generates a unique order ID, creates a new order with the provided details, saves the order in a temporary store, and publishes an `OrderCreatedEvent` to a message queue.\\n\\n`getOrderById`: Retrieves an order from the temporary store by its ID.\\n\\nThe file also imports several classes and interfaces from other packages, including `CreateOrderRequest`, `OutOfStockException`, `PaymentFailedException`, `OrderCreatedEvent`, `OrderEventProducer`, `Order`, and `OrderStatus`.\&quot;,\&quot;/notification-service/src/main/java/org/example/controller/PingController.java\&quot;:\&quot;This file contains a single class and a single function, which are summarized as follows:\\n\\n`PingController`: A REST controller class that provides a simple health check endpoint.\\n\\n`ping()`: A function that returns a string indicating that the notification service is up and running.\&quot;,\&quot;/order-service/src/main/java/org/example/controller/OrderController.java\&quot;:\&quot;`OrderController`: A Spring MVC controller class that handles HTTP requests related to orders.\\n\\n`createOrder`: Creates a new order based on the provided `CreateOrderRequest` and returns an `OrderResponse`.\\n\\n`getOrder`: Retrieves an order by its ID and returns an `OrderResponse`, or a 404 Not Found response if the order is not found.\\n\\nThis file defines a Spring MVC controller class `OrderController` that provides two endpoints: one for creating a new order and one for retrieving an order by its ID. The controller interacts with the `OrderService` to handle the business logic related to orders.\&quot;,\&quot;/inventory-service/src/main/java/org/example/event/InventoryNotAvailableEvent.java\&quot;:\&quot;This file defines a single class, `InventoryNotAvailableEvent`, which represents an event that occurs when the inventory for a specific product is not available for a given order.\\n\\n`InventoryNotAvailableEvent`: A class that represents an event where the inventory for a specific product is not available for a given order.\\n\\n`InventoryNotAvailableEvent()`: The default constructor for the `InventoryNotAvailableEvent` class.\\n\\n`InventoryNotAvailableEvent(String orderId, String productId)`: A constructor that initializes the `orderId` and `productId` fields of the `InventoryNotAvailableEvent` class.\\n\\n`getOrderId()`: A getter method that returns the `orderId` field of the `InventoryNotAvailableEvent` class.\\n\\n`setOrderId(String orderId)`: A setter method that sets the `orderId` field of the `InventoryNotAvailableEvent` class.\\n\\n`getProductId()`: A getter method that returns the `productId` field of the `InventoryNotAvailableEvent` class.\\n\\n`setProductId(String productId)`: A setter method that sets the `productId` field of the `InventoryNotAvailableEvent` class.\&quot;,\&quot;/order-service/src/main/java/org/example/messaging/producer/OrderEventProducer.java\&quot;:\&quot;`OrderEventProducer`: This class is responsible for producing and sending `OrderCreatedEvent` messages to a Kafka topic.\\n\\n`sendOrderCreatedEvent`: This function sends an `OrderCreatedEvent` message to the \\\&quot;order-events\\\&quot; Kafka topic.\\n\\nThis file contains a Spring Service class `OrderEventProducer` that is responsible for producing and sending `OrderCreatedEvent` messages to a Kafka topic. The class has a single function `sendOrderCreatedEvent` that takes an `OrderCreatedEvent` object and sends it to the \\\&quot;order-events\\\&quot; Kafka topic.\&quot;,\&quot;/inventory-service/src/main/java/org/example/kafka/OrderEventListener.java\&quot;:\&quot;This file contains a single class, `OrderEventListener`, which is responsible for handling order-related events and managing inventory availability.\\n\\n`OrderEventListener`: This class listens for `OrderCreatedEvent` messages from a Kafka topic and processes them to determine the availability of the requested inventory.\\n\\n`handleOrderCreatedEvent`: This function is a Kafka listener that processes `OrderCreatedEvent` messages. It checks the requested quantity against the available inventory and either sends an `InventoryReservedEvent` or an `InventoryNotAvailableEvent` to the `InventoryEventProducer`.\&quot;,\&quot;/payment-service/src/main/java/org/example/controller/PaymentController.java\&quot;:\&quot;This file contains a single class and one function.\\n\\n`PaymentController`: A REST controller class that handles payment processing requests.\\n\\n`processPayment`: A function that checks if the payment amount is less than or equal to 50,000 and returns a boolean value indicating the result.\&quot;,\&quot;/order-service/src/main/java/org/example/dto/OrderResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`OrderResponse`: A data transfer object (DTO) that represents the response for an order, containing the order ID, status, and amount.\\n\\nThe file does not contain any functions, but the class has the following methods:\\n\\n`getOrderId()`: Returns the order ID.\\n`getStatus()`: Returns the order status as a string.\\n`getAmount()`: Returns the order amount.\\n\\nOverall, this file defines a DTO class to represent the response data for an order, which can be used to transfer order information between different parts of an application.\&quot;,\&quot;/payment-service/src/main/java/org/example/config/KafkaConsumerConfig.java\&quot;:\&quot;This file is a Spring configuration class for Kafka consumers. It sets up the necessary configuration for consuming two different types of events: `InventoryReservedEvent` and `InventoryNotAvailableEvent`.\\n\\n`KafkaConsumerConfig`: This class configures the Kafka consumer factory and listener container factory for the `InventoryReservedEvent` and `InventoryNotAvailableEvent` event types.\\n\\n`consumerFactory()`: This method creates a `ConsumerFactory` for the `InventoryReservedEvent` event type, configuring the necessary properties such as the Kafka bootstrap servers, consumer group ID, and deserializer.\\n\\n`kafkaListenerContainerFactory()`: This method creates a `ConcurrentKafkaListenerContainerFactory` for the `InventoryReservedEvent` event type, using the `consumerFactory()` method to set the consumer factory.\\n\\n`notAvailableConsumerFactory()`: This method creates a `ConsumerFactory` for the `InventoryNotAvailableEvent` event type, configuring the necessary properties.\\n\\n`notAvailableListenerFactory()`: This method creates a `ConcurrentKafkaListenerContainerFactory` for the `InventoryNotAvailableEvent` event type, using the `notAvailableConsumerFactory()` method to set the consumer factory.\&quot;,\&quot;/order-service/src/main/java/org/example/model/OrderStatus.java\&quot;:\&quot;This file defines an `enum` called `OrderStatus` which represents the different statuses that an order can have in an application.\\n\\n`OrderStatus`: An enum that represents the different statuses an order can have, such as `NEW`, `PENDING`, `CONFIRMED`, `CANCELLED`, and `FAILED`.\&quot;,\&quot;/payment-service/src/main/java/org/example/event/InventoryReservedEvent.java\&quot;:\&quot;This file defines a single class, `InventoryReservedEvent`, which represents an event related to reserving inventory for an order.\\n\\n`InventoryReservedEvent`: This class represents an event that occurs when inventory is reserved for a specific order.\\n\\n`InventoryReservedEvent()`: This is the default constructor for the `InventoryReservedEvent` class.\\n\\n`InventoryReservedEvent(String orderId, String productId, int quantity)`: This is a constructor for the `InventoryReservedEvent` class that takes the order ID, product ID, and quantity as parameters.\\n\\n`getOrderId()`: This method returns the order ID associated with the event.\\n\\n`setOrderId(String orderId)`: This method sets the order ID associated with the event.\\n\\n`getProductId()`: This method returns the product ID associated with the event.\\n\\n`setProductId(String productId)`: This method sets the product ID associated with the event.\\n\\n`getQuantity()`: This method returns the quantity associated with the event.\\n\\n`setQuantity(int quantity)`: This method sets the quantity associated with the event.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/artem/IdeaProjects/ecommerce-system&quot;:&quot;{\&quot;/delivery-service/src/main/java/org/example/controller/PingController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/delivery-service/src/main/java/org/example/controller/PingController.java\&quot;,\&quot;file_name\&quot;:\&quot;PingController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ping\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[7,4],[10,5]]}]},\&quot;/delivery-service/src/main/java/org/example/DeliveryServiceApplication.java\&quot;:{\&quot;file_path\&quot;:\&quot;/delivery-service/src/main/java/org/example/DeliveryServiceApplication.java\&quot;,\&quot;file_name\&quot;:\&quot;DeliveryServiceApplication.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[9,5]]}]},\&quot;/inventory-service/src/main/java/org/example/config/KafkaConsumerConfig.java\&quot;:{\&quot;file_path\&quot;:\&quot;/inventory-service/src/main/java/org/example/config/KafkaConsumerConfig.java\&quot;,\&quot;file_name\&quot;:\&quot;KafkaConsumerConfig.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;consumerFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[32,5]]},{\&quot;method_name\&quot;:\&quot;kafkaListenerContainerFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[34,4],[40,5]]}]},\&quot;/inventory-service/src/main/java/org/example/config/KafkaProducerConfig.java\&quot;:{\&quot;file_path\&quot;:\&quot;/inventory-service/src/main/java/org/example/config/KafkaProducerConfig.java\&quot;,\&quot;file_name\&quot;:\&quot;KafkaProducerConfig.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;producerConfigs\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[17,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;reservedEventProducerFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[25,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;reservedEventKafkaTemplate\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[30,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;notAvailableProducerFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[35,4],[38,5]]},{\&quot;method_name\&quot;:\&quot;notAvailableKafkaTemplate\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[40,4],[43,5]]}]},\&quot;/inventory-service/src/main/java/org/example/controller/InventoryController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/inventory-service/src/main/java/org/example/controller/InventoryController.java\&quot;,\&quot;file_name\&quot;:\&quot;InventoryController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;isInStock\&quot;,\&quot;method_parameters\&quot;:\&quot;(@RequestParam(\\\&quot;productId\\\&quot;) String productId, @RequestParam(\\\&quot;quantity\\\&quot;) int quantity)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[8,4],[13,5]]}]},\&quot;/inventory-service/src/main/java/org/example/event/InventoryNotAvailableEvent.java\&quot;:{\&quot;file_path\&quot;:\&quot;/inventory-service/src/main/java/org/example/event/InventoryNotAvailableEvent.java\&quot;,\&quot;file_name\&quot;:\&quot;InventoryNotAvailableEvent.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;InventoryNotAvailableEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[7,5]]},{\&quot;method_name\&quot;:\&quot;InventoryNotAvailableEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId, String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[12,5]]},{\&quot;method_name\&quot;:\&quot;getOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[14,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;setOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;getProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[22,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;setProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[26,4],[28,5]]}]},\&quot;/inventory-service/src/main/java/org/example/event/InventoryReservedEvent.java\&quot;:{\&quot;file_path\&quot;:\&quot;/inventory-service/src/main/java/org/example/event/InventoryReservedEvent.java\&quot;,\&quot;file_name\&quot;:\&quot;InventoryReservedEvent.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;InventoryReservedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,4],[8,5]]},{\&quot;method_name\&quot;:\&quot;InventoryReservedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId, String productId, int quantity)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;getOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[16,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;setOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[20,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;getProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[24,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;setProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[28,4],[30,5]]},{\&quot;method_name\&quot;:\&quot;getQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[32,4],[34,5]]},{\&quot;method_name\&quot;:\&quot;setQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;(int quantity)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[36,4],[38,5]]}]},\&quot;/inventory-service/src/main/java/org/example/event/OrderCreatedEvent.java\&quot;:{\&quot;file_path\&quot;:\&quot;/inventory-service/src/main/java/org/example/event/OrderCreatedEvent.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderCreatedEvent.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;OrderCreatedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;OrderCreatedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId, String productId, int quantity, String customerId, double amount)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;getOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[20,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;setOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[24,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;getProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[28,4],[30,5]]},{\&quot;method_name\&quot;:\&quot;setProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[32,4],[34,5]]},{\&quot;method_name\&quot;:\&quot;getQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[36,4],[38,5]]},{\&quot;method_name\&quot;:\&quot;setQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;(int quantity)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[40,4],[42,5]]},{\&quot;method_name\&quot;:\&quot;getCustomerId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[44,4],[46,5]]},{\&quot;method_name\&quot;:\&quot;setCustomerId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[48,4],[50,5]]},{\&quot;method_name\&quot;:\&quot;getAmount\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[52,4],[54,5]]},{\&quot;method_name\&quot;:\&quot;setAmount\&quot;,\&quot;method_parameters\&quot;:\&quot;(double amount)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[56,4],[58,5]]}]},\&quot;/inventory-service/src/main/java/org/example/kafka/InventoryEventProducer.java\&quot;:{\&quot;file_path\&quot;:\&quot;/inventory-service/src/main/java/org/example/kafka/InventoryEventProducer.java\&quot;,\&quot;file_name\&quot;:\&quot;InventoryEventProducer.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;InventoryEventProducer\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n        KafkaTemplate\\u003cString, InventoryReservedEvent\\u003e reservedEventKafkaTemplate,\\r\\n        KafkaTemplate\\u003cString, InventoryNotAvailableEvent\\u003e notAvailableKafkaTemplate\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;reservedEventKafkaTemplate\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;notAvailableKafkaTemplate\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;sendReservedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(InventoryReservedEvent event)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;InventoryReservedEvent\&quot;,\&quot;name\&quot;:\&quot;event\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;sendNotAvailableEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(InventoryNotAvailableEvent event)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;InventoryNotAvailableEvent\&quot;,\&quot;name\&quot;:\&quot;event\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[25,4],[27,5]]}]},\&quot;/inventory-service/src/main/java/org/example/kafka/OrderEventListener.java\&quot;:{\&quot;file_path\&quot;:\&quot;/inventory-service/src/main/java/org/example/kafka/OrderEventListener.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderEventListener.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;OrderEventListener\&quot;,\&quot;method_parameters\&quot;:\&quot;(InventoryEventProducer producer)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;InventoryEventProducer\&quot;,\&quot;name\&quot;:\&quot;producer\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;handleOrderCreatedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(OrderCreatedEvent event)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;OrderCreatedEvent\&quot;,\&quot;name\&quot;:\&quot;event\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[30,4],[58,5]]}]},\&quot;/inventory-service/src/main/java/org/example/InventoryServiceApplication.java\&quot;:{\&quot;file_path\&quot;:\&quot;/inventory-service/src/main/java/org/example/InventoryServiceApplication.java\&quot;,\&quot;file_name\&quot;:\&quot;InventoryServiceApplication.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[9,5]]}]},\&quot;/notification-service/src/main/java/org/example/controller/PingController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/notification-service/src/main/java/org/example/controller/PingController.java\&quot;,\&quot;file_name\&quot;:\&quot;PingController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ping\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[7,4],[10,5]]}]},\&quot;/notification-service/src/main/java/org/example/NotificationServiceApplication.java\&quot;:{\&quot;file_path\&quot;:\&quot;/notification-service/src/main/java/org/example/NotificationServiceApplication.java\&quot;,\&quot;file_name\&quot;:\&quot;NotificationServiceApplication.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[9,5]]}]},\&quot;/order-service/src/main/java/org/example/controller/OrderController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/controller/OrderController.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;OrderController\&quot;,\&quot;method_parameters\&quot;:\&quot;(OrderService orderService)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;OrderService\&quot;,\&quot;name\&quot;:\&quot;orderService\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;createOrder\&quot;,\&quot;method_parameters\&quot;:\&quot;(@RequestBody CreateOrderRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CreateOrderRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;getOrder\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable(\\\&quot;id\\\&quot;) String id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[25,4],[30,5]]}]},\&quot;/order-service/src/main/java/org/example/dto/CreateOrderRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/dto/CreateOrderRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;CreateOrderRequest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[7,4],[9,5]]},{\&quot;method_name\&quot;:\&quot;setProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;getQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[15,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;setQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;(int quantity)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;getCustomerId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[23,4],[25,5]]},{\&quot;method_name\&quot;:\&quot;setCustomerId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[27,4],[29,5]]}]},\&quot;/order-service/src/main/java/org/example/dto/OrderResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/dto/OrderResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderResponse.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;OrderResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId, OrderStatus status, double amount)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;OrderStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;getOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[15,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;getStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[19,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;getAmount\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[23,4],[23,46]]}]},\&quot;/order-service/src/main/java/org/example/exception/GlobalExceptionHandler.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/exception/GlobalExceptionHandler.java\&quot;,\&quot;file_name\&quot;:\&quot;GlobalExceptionHandler.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;handleOutOfStock\&quot;,\&quot;method_parameters\&quot;:\&quot;(OutOfStockException e)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;OutOfStockException\&quot;,\&quot;name\&quot;:\&quot;e\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;handlePaymentFailed\&quot;,\&quot;method_parameters\&quot;:\&quot;(PaymentFailedException e)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;PaymentFailedException\&quot;,\&quot;name\&quot;:\&quot;e\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[22,4],[30,5]]}]},\&quot;/order-service/src/main/java/org/example/exception/OutOfStockException.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/exception/OutOfStockException.java\&quot;,\&quot;file_name\&quot;:\&quot;OutOfStockException.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;OutOfStockException\&quot;,\&quot;method_parameters\&quot;:\&quot;(String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,4],[5,5]]}]},\&quot;/order-service/src/main/java/org/example/exception/PaymentFailedException.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/exception/PaymentFailedException.java\&quot;,\&quot;file_name\&quot;:\&quot;PaymentFailedException.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;PaymentFailedException\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,4],[5,5]]}]},\&quot;/order-service/src/main/java/org/example/messaging/config/KafkaProducerConfig.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/messaging/config/KafkaProducerConfig.java\&quot;,\&quot;file_name\&quot;:\&quot;KafkaProducerConfig.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;producerFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[16,4],[25,5]]},{\&quot;method_name\&quot;:\&quot;kafkaTemplate\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[27,4],[30,5]]}]},\&quot;/order-service/src/main/java/org/example/messaging/event/OrderCreatedEvent.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/messaging/event/OrderCreatedEvent.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderCreatedEvent.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;OrderCreatedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;OrderCreatedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId, String productId, int quantity, String customerId, double amount)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;getOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[21,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;setOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[25,4],[27,5]]},{\&quot;method_name\&quot;:\&quot;getProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[29,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;setProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[33,4],[35,5]]},{\&quot;method_name\&quot;:\&quot;getQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[37,4],[39,5]]},{\&quot;method_name\&quot;:\&quot;setQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;(int quantity)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[41,4],[43,5]]},{\&quot;method_name\&quot;:\&quot;getCustomerId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[45,4],[47,5]]},{\&quot;method_name\&quot;:\&quot;setCustomerId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[49,4],[51,5]]},{\&quot;method_name\&quot;:\&quot;getAmount\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[53,4],[55,5]]},{\&quot;method_name\&quot;:\&quot;setAmount\&quot;,\&quot;method_parameters\&quot;:\&quot;(double amount)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[57,4],[59,5]]}]},\&quot;/order-service/src/main/java/org/example/messaging/producer/OrderEventProducer.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/messaging/producer/OrderEventProducer.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderEventProducer.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;OrderEventProducer\&quot;,\&quot;method_parameters\&quot;:\&quot;(KafkaTemplate\\u003cString, OrderCreatedEvent\\u003e kafkaTemplate)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;kafkaTemplate\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;sendOrderCreatedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(OrderCreatedEvent event)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;OrderCreatedEvent\&quot;,\&quot;name\&quot;:\&quot;event\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[15,4],[17,5]]}]},\&quot;/order-service/src/main/java/org/example/model/Order.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/model/Order.java\&quot;,\&quot;file_name\&quot;:\&quot;Order.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Order\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId, String productId, int quantity, String customerId, double amount, OrderStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;},{\&quot;type\&quot;:\&quot;OrderStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;getOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[19,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;getProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[23,4],[25,5]]},{\&quot;method_name\&quot;:\&quot;getQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[27,4],[29,5]]},{\&quot;method_name\&quot;:\&quot;getAmount\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[31,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;getCustomerId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[35,4],[37,5]]},{\&quot;method_name\&quot;:\&quot;getStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;OrderStatus\&quot;,\&quot;scope\&quot;:[[39,4],[41,5]]},{\&quot;method_name\&quot;:\&quot;setStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(OrderStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;OrderStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[43,4],[45,5]]},{\&quot;method_name\&quot;:\&quot;toString\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[47,4],[56,5]]}]},\&quot;/order-service/src/main/java/org/example/model/OrderStatus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/model/OrderStatus.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderStatus.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/order-service/src/main/java/org/example/service/OrderService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/service/OrderService.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;OrderService\&quot;,\&quot;method_parameters\&quot;:\&quot;(OrderEventProducer eventProducer)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;OrderEventProducer\&quot;,\&quot;name\&quot;:\&quot;eventProducer\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[22,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;createOrder\&quot;,\&quot;method_parameters\&quot;:\&quot;(CreateOrderRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CreateOrderRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;Order\&quot;,\&quot;scope\&quot;:[[26,4],[55,5]]},{\&quot;method_name\&quot;:\&quot;getOrderById\&quot;,\&quot;method_parameters\&quot;:\&quot;(String id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[57,4],[62,5]]}]},\&quot;/order-service/src/main/java/org/example/OrderServiceApplication.java\&quot;:{\&quot;file_path\&quot;:\&quot;/order-service/src/main/java/org/example/OrderServiceApplication.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderServiceApplication.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[9,5]]}]},\&quot;/payment-service/src/main/java/org/example/config/KafkaConsumerConfig.java\&quot;:{\&quot;file_path\&quot;:\&quot;/payment-service/src/main/java/org/example/config/KafkaConsumerConfig.java\&quot;,\&quot;file_name\&quot;:\&quot;KafkaConsumerConfig.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;consumerFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[34,5]]},{\&quot;method_name\&quot;:\&quot;kafkaListenerContainerFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[36,4],[42,5]]},{\&quot;method_name\&quot;:\&quot;notAvailableConsumerFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[44,4],[56,5]]},{\&quot;method_name\&quot;:\&quot;notAvailableListenerFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[58,4],[64,5]]}]},\&quot;/payment-service/src/main/java/org/example/controller/PaymentController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/payment-service/src/main/java/org/example/controller/PaymentController.java\&quot;,\&quot;file_name\&quot;:\&quot;PaymentController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;processPayment\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @RequestParam(\\\&quot;orderId\\\&quot;) String orderId,\\r\\n            @RequestParam(\\\&quot;amount\\\&quot;) double amount\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[8,4],[14,5]]}]},\&quot;/payment-service/src/main/java/org/example/event/InventoryNotAvailableEvent.java\&quot;:{\&quot;file_path\&quot;:\&quot;/payment-service/src/main/java/org/example/event/InventoryNotAvailableEvent.java\&quot;,\&quot;file_name\&quot;:\&quot;InventoryNotAvailableEvent.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;InventoryNotAvailableEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[7,5]]},{\&quot;method_name\&quot;:\&quot;InventoryNotAvailableEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId, String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[12,5]]},{\&quot;method_name\&quot;:\&quot;getOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[14,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;setOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;getProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[22,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;setProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[26,4],[28,5]]}]},\&quot;/payment-service/src/main/java/org/example/event/InventoryReservedEvent.java\&quot;:{\&quot;file_path\&quot;:\&quot;/payment-service/src/main/java/org/example/event/InventoryReservedEvent.java\&quot;,\&quot;file_name\&quot;:\&quot;InventoryReservedEvent.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;InventoryReservedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,4],[8,5]]},{\&quot;method_name\&quot;:\&quot;InventoryReservedEvent\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId, String productId, int quantity)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;getOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[17,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;setOrderId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String orderId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;getProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[25,4],[27,5]]},{\&quot;method_name\&quot;:\&quot;setProductId\&quot;,\&quot;method_parameters\&quot;:\&quot;(String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[29,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;getQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[33,4],[35,5]]},{\&quot;method_name\&quot;:\&quot;setQuantity\&quot;,\&quot;method_parameters\&quot;:\&quot;(int quantity)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;quantity\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[37,4],[39,5]]}]},\&quot;/payment-service/src/main/java/org/example/kafka/InventoryEventListener.java\&quot;:{\&quot;file_path\&quot;:\&quot;/payment-service/src/main/java/org/example/kafka/InventoryEventListener.java\&quot;,\&quot;file_name\&quot;:\&quot;InventoryEventListener.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;handleNotAvailable\&quot;,\&quot;method_parameters\&quot;:\&quot;(InventoryNotAvailableEvent event)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;InventoryNotAvailableEvent\&quot;,\&quot;name\&quot;:\&quot;event\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;handleInventoryReserved\&quot;,\&quot;method_parameters\&quot;:\&quot;(InventoryReservedEvent event)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;InventoryReservedEvent\&quot;,\&quot;name\&quot;:\&quot;event\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[23,4],[50,5]]}]},\&quot;/payment-service/src/main/java/org/example/PaymentServiceApplication.java\&quot;:{\&quot;file_path\&quot;:\&quot;/payment-service/src/main/java/org/example/PaymentServiceApplication.java\&quot;,\&quot;file_name\&quot;:\&quot;PaymentServiceApplication.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[9,5]]}]},\&quot;/product-service/src/main/java/org/example/controller/ProductController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/product-service/src/main/java/org/example/controller/ProductController.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getPrice\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable(\\\&quot;productId\\\&quot;) String productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[16,4],[19,5]]}]},\&quot;/product-service/src/main/java/org/example/ProductServiceApplication.java\&quot;:{\&quot;file_path\&quot;:\&quot;/product-service/src/main/java/org/example/ProductServiceApplication.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductServiceApplication.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[9,5]]}]}}&quot;}" />
  </component>
</project>