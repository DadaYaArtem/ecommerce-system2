package org.example.listener;


import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.example.events.InventoryReservedEvent;
import org.example.events.ReleaseInventoryEvent;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Component;

import static org.example.kafka.constants.KafkaGroups.INVENTORY_SERVICE;
import static org.example.kafka.constants.KafkaTopics.INVENTORY_EVENTS;

@Component
public class CompensatoryListener {
    @KafkaListener(topics = INVENTORY_EVENTS, groupId = INVENTORY_SERVICE)
    public void listen(ConsumerRecord<String, Object> record) {
        Object raw = record.value();
        if (raw instanceof ReleaseInventoryEvent event) {
            System.out.println("üîÅ –û—Ç—Ä–∏–º–∞–Ω–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤—É: " + event);
//        } else if (raw instanceof InventoryReservedEvent) {
//            // –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤ —ç—Ç–æ–º Listener-–µ
        } else {
            System.out.println("‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø –ø–æ–¥—ñ—ó: " + raw.getClass().getName());
        }

    }
}
